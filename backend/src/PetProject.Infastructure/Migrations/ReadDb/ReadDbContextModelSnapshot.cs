// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PetProject.Infastructure.DbContexts;

#nullable disable

namespace PetProject.Infastructure.Migrations.ReadDb
{
    [DbContext(typeof(ReadDbContext))]
    partial class ReadDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PetProject.Domain.Shared.ValueObjects.Dtos.ForQuery.PetDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_pets");

                    b.ToTable("pets", (string)null);
                });

            modelBuilder.Entity("PetProject.Domain.Shared.ValueObjects.Dtos.ForQuery.VolunteerDto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.HasKey("Id")
                        .HasName("pk_volunteers");

                    b.ToTable("volunteers", (string)null);
                });

            modelBuilder.Entity("PetProject.Domain.Shared.ValueObjects.Dtos.ForQuery.PetDto", b =>
                {
                    b.OwnsMany("PetProject.Domain.Shared.ValueObjects.Dtos.RequisiteDto", "RequisitesDto", b1 =>
                        {
                            b1.Property<Guid>("PetDtoId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("PetDtoId", "Id")
                                .HasName("pk_pets");

                            b1.ToTable("pets");

                            b1.ToJson("requisites_dto");

                            b1.WithOwner()
                                .HasForeignKey("PetDtoId")
                                .HasConstraintName("fk_pets_pets_pet_dto_id");
                        });

                    b.Navigation("RequisitesDto");
                });

            modelBuilder.Entity("PetProject.Domain.Shared.ValueObjects.Dtos.ForQuery.VolunteerDto", b =>
                {
                    b.OwnsMany("PetProject.Domain.Shared.ValueObjects.Dtos.RequisiteDto", "RequisitesDto", b1 =>
                        {
                            b1.Property<Guid>("VolunteerDtoId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Description")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("VolunteerDtoId", "Id");

                            b1.ToTable("volunteers");

                            b1.ToJson("requisites_dto");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerDtoId")
                                .HasConstraintName("fk_volunteers_volunteers_volunteer_dto_id");
                        });

                    b.OwnsMany("PetProject.Domain.Shared.ValueObjects.Dtos.SocialNetworkDto", "SocialNetworksDto", b1 =>
                        {
                            b1.Property<Guid>("VolunteerDtoId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("name")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("reference")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("VolunteerDtoId", "Id");

                            b1.ToTable("volunteers");

                            b1.ToJson("social_networks_dto");

                            b1.WithOwner()
                                .HasForeignKey("VolunteerDtoId")
                                .HasConstraintName("fk_volunteers_volunteers_volunteer_dto_id");
                        });

                    b.Navigation("RequisitesDto");

                    b.Navigation("SocialNetworksDto");
                });
#pragma warning restore 612, 618
        }
    }
}
